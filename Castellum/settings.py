# """
# Django settings for Castellum project.

# Generated by 'django-admin startproject' using Django 5.0.1.

# For more information on this file, see
# https://docs.djangoproject.com/en/5.0/topics/settings/

# For the full list of settings and their values, see
# https://docs.djangoproject.com/en/5.0/ref/settings/
# """
# import datetime
# import os
# from pathlib import Path

# from dotenv import load_dotenv

# load_dotenv()

# # Build paths inside the project like this: BASE_DIR / 'subdir'.
# BASE_DIR = Path(__file__).resolve().parent.parent


# # Quick-start development settings - unsuitable for production
# # See https://docs.djangoproject.com/en/5.0/howto/deployment/checklist/

# # SECURITY WARNING: keep the secret key used in production secret!
# SECRET_KEY = "django-insecure-(5c-c%2f4vlj#-)11*6-wgn8hg91h5fiu5nytu#=tv!9vtzn*r"

# # SECURITY WARNING: don't run with debug turned on in production!
# DEBUG = True

# ALLOWED_HOSTS = ["*"]

# AZURE_AD = {
#     "CLIENT_ID": os.environ.get("CLIENT_ID"),
#     "AUTHORITY": "https://login.microsoftonline.com/common",
#     "CLIENT_SECRET": os.environ.get("CLIENT_SECRET"),
#     "REDIRECT_PATH": os.environ.get("REDIRECT_PATH"),
#     "SCOPE": ["User.Read"],
# }


# # Application definition

# DJANGO_APPS = [
#     "django.contrib.admin",
#     "django.contrib.auth",
#     "django.contrib.contenttypes",
#     "django.contrib.sessions",
#     "django.contrib.messages",
#     "django.contrib.staticfiles",
# ]
# THIRD_PARTY_APPS = [
#     "rest_framework",
#     "drf_spectacular",
#     "corsheaders",
#     "django_extensions",
# ]
# CUSTOM_APPS = [
#     # 'abstract',
#     "users",
#     "abstract",
#     "campaign",
#     "learning",
#     "quiz",
#     "phishing",
#     "content",
#     "courses",
# ]
# INSTALLED_APPS = DJANGO_APPS + THIRD_PARTY_APPS + CUSTOM_APPS

# MIDDLEWARE = [
#     "django.middleware.security.SecurityMiddleware",
#     "whitenoise.middleware.WhiteNoiseMiddleware",
#     "django.contrib.sessions.middleware.SessionMiddleware",
#     "corsheaders.middleware.CorsMiddleware",
#     "django.middleware.common.CommonMiddleware",
#     "django.middleware.csrf.CsrfViewMiddleware",
#     "django.contrib.auth.middleware.AuthenticationMiddleware",
#     "django.contrib.messages.middleware.MessageMiddleware",
#     "django.middleware.clickjacking.XFrameOptionsMiddleware",
# ]

# ROOT_URLCONF = "Castellum.urls"

# TEMPLATES = [
#     {
#         "BACKEND": "django.template.backends.django.DjangoTemplates",
#         "DIRS": [BASE_DIR / "templates"],
#         "APP_DIRS": True,
#         "OPTIONS": {
#             "context_processors": [
#                 "django.template.context_processors.debug",
#                 "django.template.context_processors.request",
#                 "django.contrib.auth.context_processors.auth",
#                 "django.contrib.messages.context_processors.messages",
#             ],
#         },
#     },
# ]

# WSGI_APPLICATION = "Castellum.wsgi.application"


# # Database
# # https://docs.djangoproject.com/en/5.0/ref/settings/#databases

# if os.environ.get("GITHUB_WORKFLOW"):
#     DATABASES = {
#         "default": {
#             "ENGINE": "django.db.backends.sqlite3",
#             "NAME": BASE_DIR / "db.sqlite3",
#         }
#     }
# else:
#     DATABASES = {
#         # "default": {
#         #     "ENGINE": "django.db.backends.postgresql_psycopg2",
#         #     "NAME": os.environ.get("DB_NAME"),
#         #     "USER": os.environ.get("DB_USER"),
#         #     "PASSWORD": os.environ.get("DB_PASSWORD"),
#         #     "HOST": os.environ.get("DB_HOST"),
#         #     "PORT": os.environ.get("DB_PORT"),
#         #     "TEST": {
#         #         "NAME": "test_castellum_db",
#         #         "USER": "castellum_test_user",
#         #         "PASSWORD": "castellum_test_password",
#         #     },
#         # },
#         "default": {
#             "ENGINE": "django.db.backends.sqlite3",
#             "NAME": BASE_DIR / "db.sqlite3",
#         },
#     }


# # Password validation
# # https://docs.djangoproject.com/en/5.0/ref/settings/#auth-password-validators

# AUTH_PASSWORD_VALIDATORS = [
#     {
#         "NAME": "django.contrib.auth.password_validation.UserAttributeSimilarityValidator",
#     },
#     {
#         "NAME": "django.contrib.auth.password_validation.MinimumLengthValidator",
#     },
#     {
#         "NAME": "django.contrib.auth.password_validation.CommonPasswordValidator",
#     },
#     {
#         "NAME": "django.contrib.auth.password_validation.NumericPasswordValidator",
#     },
# ]


# # Internationalization
# # https://docs.djangoproject.com/en/5.0/topics/i18n/

# LANGUAGE_CODE = "en-us"

# TIME_ZONE = "UTC"

# USE_I18N = True

# USE_TZ = True


# # Static files (CSS, JavaScript, Images)
# # https://docs.djangoproject.com/en/5.0/howto/static-files/

# STATIC_URL = "static/"
# STATIC_ROOT = os.path.join(BASE_DIR, "static")
# MEDIA_URL = "media/"
# MEDIA_ROOT = os.path.join(BASE_DIR, "mediafiles")
# STATICFILES_STORAGE = "whitenoise.storage.CompressedManifestStaticFilesStorage"

# # Default primary key field type
# # https://docs.djangoproject.com/en/5.0/ref/settings/#default-auto-field

# DEFAULT_AUTO_FIELD = "django.db.models.BigAutoField"

# # Custom user model
# AUTH_USER_MODEL = "users.User"

# # CORS_ALLOWED_ORIGINS = ["http://localhost:3000",]
# CORS_ALLOW_ALL_ORIGINS = True
# CORS_ALLOW_CREDENTIALS = True

# CSRF_TRUSTED_ORIGINS = [
#     "https://castellum-test.vercel.app/",
#     "https://castellumbe.azurewebsites.net",
# ]

# REST_FRAMEWORK = {
#     "DEFAULT_PAGINATION_CLASS": "rest_framework.pagination.PageNumberPagination",
#     "PAGE_SIZE": 10,
#     "NON_FIELD_ERRORS_KEY": "error",
#     "DEFAULT_AUTHENTICATION_CLASSES": (
#         "rest_framework_simplejwt.authentication.JWTAuthentication",
#     ),
#     "DEFAULT_SCHEMA_CLASS": "drf_spectacular.openapi.AutoSchema",
# }

# SPECTACULAR_SETTINGS = {
#     "TITLE": "Castellum Endpoints",
#     "DESCRIPTION": "Endpoints to be consumed by Castellum",
#     "VERSION": "1.0.0",
#     "SERVE_INCLUDE_SCHEMA": False,
#     # OTHER SETTINGS
# }


# SIMPLE_JWT = {
#     "ACCESS_TOKEN_LIFETIME": datetime.timedelta(days=100),
#     "REFRESH_TOKEN_LIFETIME": datetime.timedelta(days=200),
#     "ROTATE_REFRESH_TOKENS": False,
#     "BLACKLIST_AFTER_ROTATION": True,
#     "UPDATE_LAST_LOGIN": True,
#     "ALGORITHM": "HS256",
#     "SIGNING_KEY": SECRET_KEY,
#     "VERIFYING_KEY": None,
#     "AUDIENCE": None,
#     "ISSUER": None,
#     "JWK_URL": None,
#     "LEEWAY": 0,
#     "AUTH_HEADER_TYPES": ("Bearer",),
#     # 'AUTH_HEADER_TYPES': ('Bearer', 'JWT'),
#     "AUTH_HEADER_NAME": "HTTP_AUTHORIZATION",
#     "USER_ID_FIELD": "id",
#     "USER_ID_CLAIM": "user_id",
#     "USER_AUTHENTICATION_RULE": "rest_framework_simplejwt.authentication.default_user_authentication_rule",
#     "AUTH_TOKEN_CLASSES": ("rest_framework_simplejwt.tokens.AccessToken",),
#     "TOKEN_TYPE_CLAIM": "token_type",
#     "TOKEN_USER_CLASS": "rest_framework_simplejwt.models.TokenUser",
#     "JTI_CLAIM": "jti",
#     "SLIDING_TOKEN_REFRESH_EXP_CLAIM": "refresh_exp",
#     "SLIDING_TOKEN_LIFETIME": datetime.timedelta(minutes=5),
#     "SLIDING_TOKEN_REFRESH_LIFETIME": datetime.timedelta(days=1),
# }

# # REDIS
# REDIS_URL = os.environ.get("REDIS_URL", "redis://localhost:6379/0")

# # # CELERY SETTINGS
# # CHANNEL_LAYERS = {
# #     "default": {
# #         "BACKEND": "channels_redis.core.RedisChannelLayer",
# #         "CONFIG": {
# #             "hosts": [REDIS_URL],
# #         },
# #     },
# # }


# CELERY_BROKER_URL = REDIS_URL
# CELERY_RESULT_BACKEND = CELERY_BROKER_URL
# CELERY_ACCEPT_CONTENT = ["application/json"]
# CELERY_RESULT_SERIALIZER = "json"
# CELERY_TASK_SERIALIZER = "json"
# CELERY_SEND_EVENTS = True
# CELERY_TRACK_STARTED = True


# # EMAIL SETTINGS
# EMAIL_HOST = "send.one.com"
# EMAIL_BACKEND = "django_smtp_ssl.SSLEmailBackend"
# EMAIL_PORT = 465
# EMAIL_USE_SSL = True
# EMAIL_HOST_USER = os.environ.get("EMAIL_HOST_USER")
# DEFAULT_FROM_EMAIL = os.environ.get("DEFAULT_FROM_EMAIL")
# # DEFAULT_FROM_EMAIL = '"do_not_reply@aquilasec.io" <do_not_reply@aquilasec.io>'
# EMAIL_HOST_PASSWORD = os.environ.get("EMAIL_HOST_PASSWORD")
# SERVER_MAIL = DEFAULT_FROM_EMAIL


# FRONTEND_URL = "https://castellum-test.vercel.app/"

# OKTA_DOMAIN = "https://dev-11469632.okta.com"
# OKTA_API_TOKEN = os.environ.get("Okta_Token")
